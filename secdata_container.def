Bootstrap: docker
From: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

%labels
  Container for PyTorch + medical imaging (offline runtime, GPU enabled)

%files
    env.yml /opt/env.yml

%post
    # Install system packages
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential git \
    python3-dev python3-pip \
    curl ca-certificates \
    libssl-dev libffi-dev \
    neovim nano less htop ripgrep \
    libopenblas-dev libopenmpi-dev \
    openjdk-17-jdk \
    libjpeg-dev libpng-dev libtiff-dev \
    && rm -rf /var/lib/apt/lists/*

    # Install Miniforge with error checking
    MINIFORGE_URL="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
    if ! curl -L -o /tmp/miniforge.sh $MINIFORGE_URL; then
      echo "Failed to download Miniforge" >&2
      exit 1
    fi
    bash /tmp/miniforge.sh -b -p /opt/conda
    rm /tmp/miniforge.sh

    # Add conda to PATH and initialize
    export PATH="/opt/conda/bin:$PATH"

    echo "source /opt/conda/etc/profile.d/conda.sh" >> /etc/bash.bashrc
    echo "conda activate secdata-env" >> /etc/bash.bashrc

    # Create environment and activate it
    conda env create -f /opt/env.yml 
    # Cleanup
    conda clean -a -y
    apt-get clean
    rm /opt/env.yml

# Environment variables set on container start
%environment
    export PATH="/opt/conda/bin:/usr/local/bin:$PATH"
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    export CUDA_HOME=/usr/local/cuda
    #export TRANSFORMERS_OFFLINE=1
    #export HF_DATASETS_OFFLINE=1
    #export HF_HUB_OFFLINE=1
    #export HF_HOME=/models/huggingface-hub
    #export NLTK_DATA=/opt/nltk_data
    export PYTHONUNBUFFERED=1
  
# -------------------------------------------------------------------------
# Run script
%runscript
    echo "Running: $@"
    . /opt/conda/etc/profile.d/conda.sh
    conda activate secdata-env
    exec python3 "$@"
